name: 'Doxygen GitHub Pages Deploy Action'
author: 'Jonah Lawrence'
description: 'Make docs with Doxygen then deploy the generated HTML to GitHub pages'
branding:
  icon: "upload-cloud"
  color: "purple"

inputs:
  github_token:
    description: 'A GitHub token for pushing to the repo. Example: https://git.io/passing-token'
    required: true
  branch:
    description: 'Branch name for pushing GitHub pages files'
    required: true
    default: "gh-pages"
  folder:
    description: 'Folder where Doxygen will generate the HTML build files'
    required: true
    default: "docs/html"
  config_file:
    description: 'Path of the Doxygen configuration file'
    required: true
    default: "Doxyfile"
  dest_repo:
    description: 'Repository URL where to deploy API docs'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: "true"

    - name: Install Doxygen
      run: sudo apt-get install doxygen graphviz -y
      shell: bash

    - name: Generate Doxygen Documentation
      run: doxygen ${{ inputs.config_file }}
      shell: bash
      
    - name: Create .nojekyll (ensures pages with underscores work on gh pages)
      run: touch ${{ inputs.folder }}/api/.nojekyll
      shell: bash

    - name: Copy and deploy to destination repo
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        git config --unset-all http.https://github.com/.extraheader
        git config --global user.name 'Matthew A Johnson'
        git config --global user.email '1669148+Tientuine@users.noreply.github.com'
        git clone https://tientuine:$GITHUB_TOKEN@github.com/${{ inputs.dest_repo }} dest_repo
        cp -a ${{ inputs.folder }} dest_repo
        cd dest_repo
        git add ${{ inputs.folder }}
        git commit -m 'Update API docs'
        git push

    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        token: ${{ inputs.github_token }}
        branch: ${{ inputs.branch }}
        folder: ${{ inputs.folder }}

